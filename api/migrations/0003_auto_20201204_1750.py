# Generated by Django 2.2.7 on 2020-12-04 17:50

import api.models
from django.conf import settings
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion


def make_medias(apps, schema_editor):
    Photo = apps.get_model('api', 'Photo')
    Media = apps.get_model('api', 'Media')

    for photo in Photo.objects.all():
        m = Media.objects.create(
            owner=photo.owner,
            meta_gps_lat=photo.exif_gps_lat,
            meta_gps_lon=photo.exif_gps_lon,
            meta_timestamp=photo.exif_timestamp,
            thumbnail=photo.thumbnail,
            thumbnail_tiny=photo.thumbnail_tiny,
            thumbnail_small=photo.thumbnail_small,
            thumbnail_big=photo.thumbnail_big,
            square_thumbnail=photo.square_thumbnail,
            square_thumbnail_tiny=photo.square_thumbnail_tiny,
            square_thumbnail_small=photo.square_thumbnail_small,
            square_thumbnail_big=photo.square_thumbnail_big,
            favorited=photo.favorited,
            hidden=photo.hidden,
        )
        photo.media = m
        photo.save()

def unmake_medias(apps, schema_editor):
    Photo = apps.get_model('api', 'Photo')
    Photo.objects.update(media=None)


class Migration(migrations.Migration):

    dependencies = [
        ('api', '0002_auto_20191112_1645'),
    ]

    operations = [
        migrations.CreateModel(
            name='Media',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('meta_gps_lat', models.FloatField(blank=True, null=True)),
                ('meta_gps_lon', models.FloatField(blank=True, null=True)),
                ('meta_timestamp', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('thumbnail', models.ImageField(upload_to='thumbnails')),
                ('thumbnail_tiny', models.ImageField(upload_to='thumbnails_tiny')),
                ('thumbnail_small', models.ImageField(upload_to='thumbnails_small')),
                ('thumbnail_big', models.ImageField(upload_to='thumbnails_big')),
                ('square_thumbnail', models.ImageField(upload_to='square_thumbnails')),
                ('square_thumbnail_tiny', models.ImageField(upload_to='square_thumbnails_tiny')),
                ('square_thumbnail_small', models.ImageField(upload_to='square_thumbnails_small')),
                ('square_thumbnail_big', models.ImageField(upload_to='square_thumbnails_big')),
                ('favorited', models.BooleanField(db_index=True, default=False)),
                ('hidden', models.BooleanField(db_index=True, default=False)),
                ('public', models.BooleanField(db_index=True, default=False)),
                ('owner', models.ForeignKey(default=None, on_delete=models.SET(api.models.get_deleted_user), to=settings.AUTH_USER_MODEL)),
                ('shared_to', models.ManyToManyField(related_name='media_shared_to', to=settings.AUTH_USER_MODEL)),
            ],
            bases=(models.Model, api.models._ThumbnailMixin),
        ),
        migrations.AlterField(
            model_name='person',
            name='account',
            field=models.OneToOneField(blank=True, default=None, null=True, on_delete=models.SET(api.models.get_deleted_user), to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='person',
            name='cluster_id',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='person',
            name='kind',
            field=models.CharField(blank=True, choices=[('USER', 'User Labelled'), ('CLUSTER', 'Cluster ID'), ('UNKNOWN', 'Unknown Person')], max_length=10),
        ),
        migrations.AlterField(
            model_name='person',
            name='mean_face_encoding',
            field=models.TextField(blank=True),
        ),
        migrations.CreateModel(
            name='Video',
            fields=[
                ('video_path', models.CharField(db_index=True, max_length=512, unique=True)),
                ('video_hash', models.CharField(max_length=64, primary_key=True, serialize=False)),
                ('added_on', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('meta_json', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('media', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='api.Media')),
            ],
        ),
        migrations.AddField(
            model_name='photo',
            name='media',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='api.Media'),
        ),
        migrations.RunPython(make_medias, reverse_code=unmake_medias),
        migrations.AlterField(
            model_name='photo',
            name='media',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='api.Media'),
        ),
    ]
